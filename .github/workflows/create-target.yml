on:
  push:
    branches:
      - '*/*/*'
      - '!master'
      
jobs:
  get-branch-name:
    name: Get branch name
    runs-on: ubuntu-18.04
    outputs:
      branch: ${{ steps.current_branch.outputs.branch }}
      owner: ${{ steps.current_branch_owner.outputs.owner }}
      repo: ${{ steps.current_branch_repo.outputs.repo }}
      target-branch: ${{ steps.current_branch_target.outputs.target-branch }}
      target-repo: ${{ steps.target_repo.outputs.target-repo }}
    steps:
    - id: current_branch
      # Get branch name (e.g. hashicorp/repo_name/main)
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
    - id: target_repo
      # Get everything before last '/' (e.g. hashicorp/repo_name)
      run: echo "##[set-output name=target-repo;]$(echo ${{ steps.current_branch.outputs.branch }} | sed 's|\(.*\)/.*|\1|')"
    - id: current_branch_owner
      # Get owner (e.g. hashicorp)
      run: echo "##[set-output name=owner;]$(echo ${{ steps.current_branch.outputs.branch }} | awk -F "/" 'NR==1 {print $1}')"
    - id: current_branch_repo
      # Get target repo name '/' (e.g. repo_name)
      run: echo "##[set-output name=repo;]$(echo ${{ steps.current_branch.outputs.branch }} | awk -F "/" 'NR==1 {print $2}')"
    - id: current_branch_target
      # Get target branch (e.g. main)
      run: echo "##[set-output name=target-branch;]$(echo ${{ steps.current_branch.outputs.branch }} | awk -F "/" 'NR==1 {print $3}')"
  check-for-target:
    runs-on: ubuntu-18.04
    needs: get-branch-name
    steps:
      # - name: Check if ${{ needs.get-branch-name.outputs.target-branch }} branch exists
      #   uses: octokit/request-action@v2.x
      #   id: check_for_target
      #   with:
      #     # https://developer.github.com/v3/repos/branches/#get-a-branch
      #     route: GET /repos/:owner/:repo/branches/:branch
      #     owner: ${{ needs.get-branch-name.outputs.owner }}
      #     repo: ${{ needs.get-branch-name.outputs.repo }}
      #     branch: ${{ needs.get-branch-name.outputs.target-branch }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          repository: ${{ needs.get-branch-name.outputs.target-repo }}
          token: ${{ secrets.GH_TOKEN }}
          # Number of commits to fetch. 0 indicates all history.
          fetch-depth: 0
          ref: 'master'
      - name: Create ${{ needs.get-branch-name.outputs.target-branch }} branch off master
        if: ${{ success() }}
        run: git branch -m master ${{ needs.get-branch-name.outputs.target-branch }}
      - name: Push ${{ needs.get-branch-name.outputs.target-branch }} branch
        if: ${{ success() }}
        run: git push -u origin ${{ needs.get-branch-name.outputs.target-branch }}
  check-target-equals-master:
    runs-on: ubuntu-18.04
    needs: [get-branch-name, check-for-target]
    steps:
      - name: Checkout ${{ needs.get-branch-name.outputs.target-branch }} branch
        uses: actions/checkout@v2
        with:
          repository: ${{ needs.get-branch-name.outputs.target-repo }}
          token: ${{ secrets.GH_TOKEN }}
          # Number of commits to fetch. 0 indicates all history.
          fetch-depth: 0
          ref: ${{ needs.get-branch-name.outputs.target-branch }}
      - name: Check if ${{ needs.get-branch-name.outputs.target-branch }} == master
        if: ${{ success() }}
        run: |
          if ! git diff-index --quiet origin/master;
          then
            echo "${{ needs.get-branch-name.outputs.target-branch }} isn't equal to master.."
            # Send slack alert -- ${{ needs.get-branch-name.outputs.target-branch }} already exists but != master, so manually check it out
            # Or simply overwrite ${{ needs.get-branch-name.outputs.target-branch }}? 
            exit 1
          else
            echo "${{ needs.get-branch-name.outputs.target-branch }} exists and is equal to master.. skip create-main-branch job"
          fi
  call-update-ci:
    runs-on: ubuntu-18.04
    needs: [get-branch-name, check-for-target, check-target-equals-master]
    steps:
      - name: Call update-ci.yml workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: mdeggies/master-to-main
          event-type: trigger-update-ci-workflow
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "target_repo": "${{ needs.get-branch-name.outputs.target-repo }}", "target_branch": "${{ needs.get-branch-name.outputs.target-branch }}" }'
  