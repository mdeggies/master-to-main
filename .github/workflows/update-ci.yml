on:
  repository_dispatch:
    types: [trigger-update-ci-workflow]

jobs:
  prep-update-ci:
    name: Prepare to update CI config
    runs-on: ubuntu-18.04
    outputs:
      owner: ${{ steps.inputs.outputs.owner }}
      repo: ${{ steps.inputs.outputs.repo }}
      target-branch: ${{ steps.inputs.outputs.target-branch }}
      target-repo: ${{ steps.inputs.outputs.target-repo }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - id: inputs
        run: |
          echo "##[set-output name=owner;]$(echo ${{ github.event.client_payload.owner }})"
          echo "##[set-output name=repo;]$(echo ${{ github.event.client_payload.repo }})"
          echo "##[set-output name=target-branch;]$(echo ${{ github.event.client_payload.target_branch }})"
          echo "##[set-output name=target-repo;]$(echo ${{ github.event.client_payload.target_repo }})"
  update-ci:
    name: Update CI
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout main ${{ needs.prep-update-ci.outputs.target-branch }} with all history
        uses: actions/checkout@v2
        with:
          repository: ${{ needs.prep-update-ci.outputs.target-repo }}
          token: ${{ secrets.GH_TOKEN }}
          # Number of commits to fetch. 0 indicates all history.
          fetch-depth: 0
          ref: ${{ needs.prep-update-ci.outputs.target-branch }}
      - name: Did checkout succeed?
        if: ${{ success() }}
        run: echo "::set-env name=main_checkout_status::success"
      - name: Replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in the .circleci dir
        run: |
          if [[ $main_checkout_status == "success" && -d "./.circleci" ]];
          then
            echo "Attempting to replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in ./.circleci/*.yml"
            grep -lR "master" ./.circleci | xargs sed -i 's/master/${{ needs.prep-update-ci.outputs.target-branch }}/g'
            echo "::set-env name=edit::true"
          else
            echo "No ./.circleci directory exists, so no changes required."
          fi
      - name: Replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in .travis.yml
        run: |
          if [[ $main_checkout_status == "success" && -f ".travis.yml" ]];
          then
            echo "Attempting to replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in .travis.yml"
            grep -lR "master" .travis.yml | xargs sed -i 's/master/${{ needs.prep-update-ci.outputs.target-branch }}/g'
            echo "::set-env name=edit::true"
          else 
            echo "No .travis.yml file exists, so no changes required."
          fi
      - name: Replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in ./.github
        run: | 
          if [[ $main_checkout_status == "success" && -d "./.github" ]];
          then           
            echo "Attempting to replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in ./.github/*.yml"
            grep -lR "master" ./.github | xargs sed -i 's/master/${{ needs.prep-update-ci.outputs.target-branch }}/g'
            echo "::set-env name=edit::true"
          else
            echo "No ./.github directory exists, so no changes required."
          fi
      - name: Replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in ./.teamcity
        run: | 
          if [[ $main_checkout_status == "success" &&  -d "./.teamcity" ]];
          then
            echo "Attempting to replace 'master' with ${{ needs.prep-update-ci.outputs.target-branch }} in ./.teamcity/*.yml"
            grep -lR "master" ./.teamcity | xargs sed -i 's/master/${{ needs.prep-update-ci.outputs.target-branch }}/g'
            echo "::set-env name=edit::true"
          else
            echo "No ./.teamcity directory exists, so no changes required."
          fi
      - name: Add, commit, and force push changes
        run: |
          if [[ $main_checkout_status == "success" && $edit ]];
          then
            echo "Adding, committing, and pushing changes to branch 'update-ci-references'"
            git config --global user.name "inclusive-language-bot"
            git config --global user.email "inclusive-language-bot@hashicorp.com"
            git add .
            git commit -m "Updating CI references to master"
            git checkout -b update-ci-references
            git push origin update-ci-references 
          fi 
      - name: Create PR on success 
        uses: octokit/request-action@v2.x
        id: create_pr
        if: ${{ success() }}
        with:
          route: POST /repos/:owner/:repo/pulls
          owner: ${{ needs.prep-update-ci.outputs.owner }}
          repo: ${{ needs.prep-update-ci.outputs.repo }}
          title: Update 'master' CI references to '${{ needs.prep-update-ci.outputs.target-branch }}'
          head: update-ci-references
          base: ${{ needs.prep-update-ci.outputs.target-branch }}
          body: This PR aims to update all references from 'master' to '${{ needs.prep-update-ci.outputs.target-branch }}' in every CI file in this repo. *NOTE* This PR was generated automatically, so please take a close look before approving and merging! 
          maintainer_can_modify: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          